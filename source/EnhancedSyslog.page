Menu="UNRAID-OS"
Title="Enhanced System Log"
Icon="align-left"
Tag="list"
---
<?php
/* Copyright 2015-2016, Lime Technology
 * Copyright 2015-2016, Bergware International.
 * Copyright 2015-2025, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>

<?
/* Define our plugin name. */
define('ENHANCED_LOG_PLUGIN', 'enhanced.log');

/* Define the docroot path. */
if (!defined('DOCROOT')) {
	define('DOCROOT', $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp');
}
?>

<?
$zip = str_replace(' ','_',strtolower($var['NAME']))."-syslog-".date('Ymd-Hi').".zip";

/* Assign events and colors from configuration file. */
$enhanced_log_cfg	= parse_ini_file( "/boot/config/plugins/enhanced.log/enhanced.log.cfg" );
$display_lines		= (isset($enhanced_log_cfg['LINES']) && $enhanced_log_cfg['LINES'] != "" ? $enhanced_log_cfg['LINES'] : 1000);

/* Array of strings and highlight colors - "match string", "event". */
$pre_defined = array_map(
	function($line) { return str_getcsv($line, ",", '"', "\\"); },
	file('plugins/enhanced.log/syslog_match.conf')
);

if ($enhanced_log_cfg['OTHER'] == "yes") {
	$custom	= array_map(
		function($line) { return str_getcsv($line, ",", '"', "\\"); },
		file('/boot/config/plugins/enhanced.log/custom_syslog.conf')
	);
	$match	= array_merge($pre_defined, $custom);
} else {
	$match	= $pre_defined;
}

unset($pre_defined);
unset($custom);

if ($display['theme'] == 'white' || $display['theme'] == 'black') {
	$font_size	= '10pt';
} else {
	$font_size	= '14pt';
}

if ($enhanced_log_cfg['ERRORS'] == "yes") {
	$errors_color			= $enhanced_log_cfg['ERRORS_CLR'];
	$errors_tag				= "<span style='background-color:$errors_color; font-size: $font_size'>&nbsp;_(Errors)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$errors_color			= "";
}

if ($enhanced_log_cfg['MINOR_ISSUES'] == "yes") {
	$minor_issues_color		= $enhanced_log_cfg['MINOR_ISSUES_CLR'];
	$minor_issues_tag		= "<span style='background-color:$minor_issues_color; font-size: $font_size'>&nbsp_(Minor Issues)_&nbsp</span>&nbsp;&nbsp;&nbsp;";
} else {
	$minor_issues_color		= "";
}

if ($enhanced_log_cfg['LIME_TECH'] == "yes") {
	$lime_tech_color		= $enhanced_log_cfg['LIME_TECH_CLR'];
	$lime_tech_tag			= "<span style='background-color:$lime_tech_color; font-size: $font_size'>&nbsp;_(Lime Tech)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$lime_tech_color		= "";
}

if ($enhanced_log_cfg['ARRAY'] == "yes") {
	$array_color			= $enhanced_log_cfg['ARRAY_CLR'];
	$array_tag				= "<span style='background-color:$array_color; font-size: $font_size'>&nbsp;_(Array)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$array_color			= "";
}

if ($enhanced_log_cfg['SYSTEM'] == "yes") {
	$system_color			= $enhanced_log_cfg['SYSTEM_CLR'];
	$system_tag				= "<span style='background-color:$system_color; font-size: $font_size'>&nbsp;_(System)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$system_color			= "";
}

if ($enhanced_log_cfg['FILE_SYSTEM'] == "yes") {
	$file_system_color		= $enhanced_log_cfg['FILE_SYSTEM_CLR'];
	$file_system_tag		= "<span style='background-color:$file_system_color; font-size: $font_size'>&nbsp;_(File System)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$file_system_color		= "";
}

if ($enhanced_log_cfg['DRIVE_RELATED'] == "yes") {
	$drive_related_color	= $enhanced_log_cfg['DRIVE_RELATED_CLR'];
	$drive_related_tag		= "<span style='background-color:$drive_related_color; font-size: $font_size'>&nbsp;_(Drive Related)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$drive_related_color	= "";
}

if ($enhanced_log_cfg['NETWORK'] == "yes") {
	$network_color			= $enhanced_log_cfg['NETWORK_CLR'];
	$network_tag			= "<span style='background-color:$network_color; font-size: $font_size'>&nbsp;_(Network)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$network_color = "";
}

if ($enhanced_log_cfg['LOGIN'] == "yes") {
	$login_color			= $enhanced_log_cfg['LOGIN_CLR'];
	$login_tag				= "<span style='background-color:$login_color; font-size: $font_size'>&nbsp;_(Login)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$login_color			= "";
}

if ($enhanced_log_cfg['EMHTTP'] == "yes") {
	$emhttp_color			= $enhanced_log_cfg['EMHTTP_CLR'];
	$emhttp_tag				= "<span style='background-color:$emhttp_color; font-size: $font_size'>&nbsp;_(emhttp)_&nbsp;</span>&nbsp;&nbsp;&nbsp;";
} else {
	$emhttp_color			= "";
}

if ($enhanced_log_cfg['OTHER'] == "yes") {
	$other_color			= $enhanced_log_cfg['OTHER_CLR'];
	$other_tag				= "<span style='background-color:$other_color; font-size: $font_size'>&nbsp;_(Other)_&nbsp;</span>";
} else {
	$other_color			= "";
}

/* Adjust array colors. */
$i = 0;
foreach ($match as $s) {
	switch ($s[1]) {
		case ("error"):
			$match[$i][1] = $errors_color;
			break;
		case ("minor issue"):
			$match[$i][1] = $minor_issues_color;
			break;
		case ("lime tech"):
			$match[$i][1] = $lime_tech_color;
			break;
		case ("array"):
			$match[$i][1] = $array_color;
			break;
		case ("system"):
			$match[$i][1] = $system_color;
			break;
		case ("file system"):
			$match[$i][1] = $file_system_color;
			break;
		case ("drive related"):
			$match[$i][1] = $drive_related_color;
			break;
		case ("network"):
			$match[$i][1] = $network_color;
			break;
		case ("login"):
			$match[$i][1] = $login_color;
			break;
		case ("emhttp"):
			$match[$i][1] = $emhttp_color;
			break;
		case ("other"):
			$match[$i][1] = $other_color;
			break;
		default:
			break;			
	}
	$i++;
}

echo $display['resize'] ? "<pre class='up' style='display:none'>" : "<pre class='up'>";
$log_lines = explode("\n", shell_exec("/usr/bin/cat /var/log/syslog | tail -n ".escapeshellarg($display_lines)));
foreach ($log_lines as $line) {
	$line .="\n";
	$found_it = false;
	$i = 0;
	foreach ($match as $s) {
		if (($s[1] !== "") && (preg_match("/$s[0]/i", $line))) {
			$found_it = true;
			break;
		}
		$i++;
	}

	if (($found_it) && ($s[1] !== "skip") || ($enhanced_log_cfg['TEXT'] == "yes")) {
		echo "<span style='background-color:".(isset($match[$i][1]) ? $match[$i][1] : "")."';>$line</span>";
	}
}
echo "</pre>";
?>

<script>
function cleanUp() {
	if (document.hasFocus()) {
		$('input[value="Downloading..."]').val('Download').prop('disabled',false);
		$.post('/webGui/include/Download.php',{cmd:'delete',file:'<?=$zip?>'});
	} else {
		setTimeout(cleanUp,4000);
	}
}  

function getlog() {
	$('input[value="Download"]').val('Downloading...').prop('disabled',true);
	$.post('/webGui/include/Download.php',{cmd:'save',source:'/var/log/syslog',file:'<?=$zip?>'},function(zip) {
		location = zip;
		setTimeout(cleanUp,4000);
	});
}

window.addEventListener("load", function() {
	var logContainer = document.querySelector("pre.up");
	if (logContainer) {
		logContainer.scrollTop = logContainer.scrollHeight;
	}
});

$(function() {
	if ( typeof caPluginUpdateCheck === "function" ) {
		caPluginUpdateCheck("enhanced.log.plg");
	}

	<?if ($display['resize']):?>
	function resize() {
	  $('pre.up').height(Math.max(window.innerHeight-330,370)).show();
	}

	resize();
	$(window).bind('resize',function(){resize();});
	<?endif;?>
});

<?if ($other_color != ""):?>
	$('.tabs').append("<span class='status'><?=$other_tag?></span>");
<?endif;?>
<?if ($emhttp_color != ""):?>
	$('.tabs').append("<span class='status'><?=$emhttp_tag?></span>");
<?endif;?>
<?if ($login_color != ""):?>
	$('.tabs').append("<span class='status'><?=$login_tag?></span>");
<?endif;?>
<?if ($network_color != ""):?>
	$('.tabs').append("<span class='status'><?=$network_tag?></span>");
<?endif;?>
<?if ($drive_related_color != ""):?>
	$('.tabs').append("<span class='status'><?=$drive_related_tag?></span>");
<?endif;?>
<?if ($file_system_color != ""):?>
	$('.tabs').append("<span class='status'><?=$file_system_tag?></span>");
<?endif;?>
<?if ($system_color != ""):?>
	$('.tabs').append("<span class='status'><?=$system_tag?></span>");
<?endif;?>
<?if ($array_color != ""):?>
	$('.tabs').append("<span class='status'><?=$array_tag?></span>");
<?endif;?>
<?if ($lime_tech_color != ""):?>
	$('.tabs').append("<span class='status'><?=$lime_tech_tag?></span>");
<?endif;?>
<?if ($minor_issues_color != ""):?>
	$('.tabs').append("<span class='status'><?=$minor_issues_tag?></span>");
<?endif;?>
<?if ($errors_color != ""):?>
	$('.tabs').append("<span class='status'><?=$errors_tag?></span>");
<?endif;?>
</script>

<input type="button" value="_(Download)_" onclick="getlog()">
<input type="button" value="_(Refresh)_" onclick="refresh()">
<button type="button" onclick="done()">_(Done)_</button>
